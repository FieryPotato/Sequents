The HTML spec for sequents is as follows:
    Each tree will be represented by a tree class which will act as a
    grid container for the leaves (cells). The grid's height will be 
    twice the height of the proof tree (i.e. the base sequent's 
    complexity) plus one and its width will (TBD).

    Each tree will have its own class, defining grid-template-areas in
    accordance with the size of the proof tree. Each leaf on that tree
    will also have its own class, with a horizontal bar above it. The
    text in each leaf (cell) will be centered.

    Each tree will be identified by its root, with disallowed 
    characters replaced by numbers (numbers in sequents may have to be
    reserved for this, but we'll see).

    the root
    (A -> B), A; B 
    yields the following classes:
        ._1A_implies_B25_A6_B (the tree, i.e. grid container)
        ._1A_implies_B25_A6_B-f (the root, whose content is just 
        the sequent, f stands for floor for now, this may change)
        ._1A_implies_B25_A6_B-ft (the label for the root, t stands
        for tag, since l (label) is taken)
        ._1A_implies_B25_A6_B-l (the left parent, whose content is 
        equivalent to A; A)
        ._1A_implies_B25_A6_B-lt (label for left parent)
        ._1A_implies_B25_A6_B-r (the right parent, whose content is
        equivalent to B; B)
        ._1A_implies_B25_A6_B-rt (label for right parent)

    To get around reserved characters in css classes, we make the 
    following substitutions:
        - " " -> _
        - "(" -> 1
        - ")" -> 2
        - "<" -> 3
        - ">" -> 4
        - "," -> 5
        - ";" -> 6
    Moreover, because we cannot start with digits or hyphens followed 
    by digits, all classes will begin with an underscore to allow 
    sequents which would begin with parentheses.
    We reserve hyphens for the class identifier. We follow sequents'
    paths from the root by going either left (l), right (r) or neither 
    (m), so that sequents with two parents always have an l and r 
    parent and single-parent sequents have only an m parent. These are 
    placed in the grid-template-areas property of the tree class.

WIP html creation flow:
    1. Use my HTML class which is an adapter for dominate as a context 
    manager.
    2. For each tree in whatever input iterable we end up using (maybe
    Prover, maybe something else): 
        i. Gridify the tree, yielding two lists (css and objects)
        ii. Add the css list to the style tag in the document's head.
        iii. Create a title header (h3?) in the document's body whose 
        content is the tree's root sequent.
        iv. Convert the objects list into a dictionary with css classes
        as keys and the objects' string representations (i.e. str(f) 
        and f.tag()) as values.
        v. Create a tree div and fill it with each key-value pair in
        the natural way. (Ensure here that cells subclass the HTML cell
        class in boilerplate.json.)
        vi. Close the tag and add a break.

